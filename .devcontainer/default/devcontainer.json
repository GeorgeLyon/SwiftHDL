// Reference: https://containers.dev/implementors/json_reference/
{
  "name": "SwiftHDL",
  "dockerFile": "Dockerfile",

  // Allow the processes in the container to attach a debugger
  "capAdd": [ "SYS_PTRACE" ],
  "securityOpt": [ "seccomp=unconfined" ],

  "mounts": [
    // Use a named volume for the build products for optimal performance (https://code.visualstudio.com/remote/advancedcontainers/improve-performance?WT.mc_id=javascript-14373-yolasors#_use-a-targeted-named-volume)
    "source=${localWorkspaceFolderBasename}-build,target=${containerWorkspaceFolder}/build,type=volume",
    // Use a named volume to share the ccache database. We use a simple name so that different devcontainers which build llvm could all share the same ccache database. Also share the configuration folder so configuration settings persist.
    "source=shared-llvm-ccache-database,target=/root/.cache/ccache,type=volume",
    "source=shared-llvm-ccache-config,target=/root/.config/ccache,type=volume"
  ],
  "containerEnv": {
    "EDITOR": "code --wait",
    "GIT_EDITOR": "code --wait"
  },
  "remoteEnv": {
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
    "PATH": "${containerWorkspaceFolder}/build/${containerWorkspaceFolderBasename}/bin:${containerEnv:PATH}",
    "PKG_CONFIG_PATH": "${containerWorkspaceFolder}/build/install/pkgconfig"
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "llvm-vs-code-extensions.vscode-clangd",
        "llvm-vs-code-extensions.vscode-mlir",
        "ms-vscode.cmake-tools",
        "sswg.swift-lang",
        "timonwong.shellcheck",
        "vadimcn.vscode-lldb",
        "vknabel.vscode-apple-swift-format"
      ],
      "settings": {
        // This must be set in devcontainer.json because they must be absolute paths and thus cannot use `${workspaceFolder}` if defined in `settings.json`
        "mlir.server_path": "${containerWorkspaceFolder}/build/${containerWorkspaceFolderBasename}/bin/swift-hdl-lsp-server",

        // -- Swift Settings
        "lldb.library": "/swift/usr/lib/liblldb.so",
        "lldb.launch.expressions": "native"
      }
    }
  }
}
